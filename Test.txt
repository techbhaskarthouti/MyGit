using System;
using System.IO;
using System.Text;

class Program
{
    static void Main()
    {
        string filePath = @"C:\Path\To\YourFile.csv";

        try
        {
            if (IsUtf8(filePath, out bool hasBom))
            {
                Console.WriteLine($"The file is UTF-8 {(hasBom ? "with BOM" : "without BOM")}.");
            }
            else
            {
                Console.WriteLine("The file is not UTF-8 encoded.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    /// <summary>
    /// Checks if a file is UTF-8 encoded and whether it has a BOM.
    /// </summary>
    /// <param name="filePath">Path to the file.</param>
    /// <param name="hasBom">True if the file has a BOM; otherwise, false.</param>
    /// <returns>True if the file is UTF-8 encoded; otherwise, false.</returns>
    static bool IsUtf8(string filePath, out bool hasBom)
    {
        hasBom = false;

        // Read the first few bytes to detect a BOM
        byte[] buffer = new byte[3];
        using (var stream = new FileStream(filePath, FileMode.Open, FileAccess.Read))
        {
            int bytesRead = stream.Read(buffer, 0, buffer.Length);

            // Check for UTF-8 BOM (EF BB BF)
            if (bytesRead >= 3 && buffer[0] == 0xEF && buffer[1] == 0xBB && buffer[2] == 0xBF)
            {
                hasBom = true;
                return true;
            }
        }

        // Check the rest of the file for valid UTF-8 sequences
        byte[] fileBytes = File.ReadAllBytes(filePath);
        return IsValidUtf8(fileBytes);
    }

    /// <summary>
    /// Validates if a byte array conforms to UTF-8 encoding rules.
    /// </summary>
    /// <param name="bytes">Byte array to check.</param>
    /// <returns>True if the byte array is valid UTF-8; otherwise, false.</returns>
    static bool IsValidUtf8(byte[] bytes)
    {
        int i = 0;

        while (i < bytes.Length)
        {
            if ((bytes[i] & 0x80) == 0) // 1-byte (ASCII)
            {
                i++;
            }
            else if (i + 1 < bytes.Length &&
                     (bytes[i] & 0xE0) == 0xC0 && // 2-byte sequence
                     (bytes[i + 1] & 0xC0) == 0x80)
            {
                i += 2;
            }
            else if (i + 2 < bytes.Length &&
                     (bytes[i] & 0xF0) == 0xE0 && // 3-byte sequence
                     (bytes[i + 1] & 0xC0) == 0x80 &&
                     (bytes[i + 2] & 0xC0) == 0x80)
            {
                i += 3;
            }
            else if (i + 3 < bytes.Length &&
                     (bytes[i] & 0xF8) == 0xF0 && // 4-byte sequence
                     (bytes[i + 1] & 0xC0) == 0x80 &&
                     (bytes[i + 2] & 0xC0) == 0x80 &&
                     (bytes[i + 3] & 0xC0) == 0x80)
            {
                i += 4;
            }
            else
            {
                return false; // Invalid UTF-8 sequence
            }
        }

        return true;
    }
}
